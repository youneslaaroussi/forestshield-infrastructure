AWSTemplateFormatVersion: '2010-09-09'
Description: 'ForestShield - AWS Serverless Deforestation Detection System'

Parameters:
  ProjectName:
    Type: String
    Default: forestshield
    Description: Name of the project (used for resource naming)
  
  Environment:
    Type: String
    Default: prod
    AllowedValues: [dev, staging, prod]
    Description: Deployment environment
  
  LambdaDeploymentBucket:
    Type: String
    Description: S3 bucket containing the Lambda deployment packages (JARs).
    Default: forestshield-lambda-deployments

  NotificationEmail:
    Type: String
    Description: Email address for deforestation alerts
    AllowedPattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'

Resources:
  # S3 Buckets for data storage
  ProcessedDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-processed-data-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30

  ModelsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-models-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TempBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-temp-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteTempFiles
            Status: Enabled
            ExpirationInDays: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # IAM Roles
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt MonitoredRegionsTable.Arn
                  - !GetAtt DeforestationAlertsTable.Arn
                  - !Sub '${MonitoredRegionsTable.Arn}/index/*'
                  - !Sub '${DeforestationAlertsTable.Arn}/index/*'
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ProcessedDataBucket}/*'
                  - !Sub 'arn:aws:s3:::${ModelsBucket}/*'
                  - !Sub 'arn:aws:s3:::${TempBucket}/*'
                  - !GetAtt ProcessedDataBucket.Arn
                  - !GetAtt ModelsBucket.Arn
                  - !GetAtt TempBucket.Arn
        - PolicyName: SageMakerAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:CreateProcessingJob
                  - sagemaker:DescribeProcessingJob
                  - sagemaker:StopProcessingJob
                Resource: '*'
        - PolicyName: SNSPublish
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref DeforestationAlertsTopic

  SageMakerExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-sagemaker-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${ProcessedDataBucket}/*'
                  - !Sub 'arn:aws:s3:::${ModelsBucket}/*'
                  - !Sub 'arn:aws:s3:::${TempBucket}/*'
                  - !GetAtt ProcessedDataBucket.Arn
                  - !GetAtt ModelsBucket.Arn
                  - !GetAtt TempBucket.Arn

  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-stepfunctions-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaInvoke
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !GetAtt VegetationAnalyzerFunction.Arn
                  - !GetAtt SearchImagesFunction.Arn
                  - !GetAtt SageMakerProcessorFunction.Arn

  # Lambda Functions
  VegetationAnalyzerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-vegetation-analyzer'
      Runtime: python3.11
      Handler: handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaDeploymentBucket
        S3Key: 'vegetation-analyzer-deployment.zip'
      Timeout: 300
      MemorySize: 2048
      Layers:
        - arn:aws:lambda:us-west-2:524387336408:layer:gdal38:4
      Environment:
        Variables:
          GDAL_DATA: /opt/share/gdal
          PROJ_LIB: /opt/share/proj
          PROCESSED_DATA_BUCKET: !Ref ProcessedDataBucket
          TEMP_BUCKET: !Ref TempBucket

  SearchImagesFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-search-images'
      Runtime: java17
      Handler: com.forestshield.SearchImagesHandler::handleRequest
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaDeploymentBucket
        S3Key: 'search-images-deployment.zip'
      Timeout: 60
      MemorySize: 512
      SnapStart:
        ApplyOn: PublishedVersions

  SageMakerProcessorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-sagemaker-processor'
      Runtime: java17
      Handler: com.forestshield.SageMakerProcessorHandler::handleRequest
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaDeploymentBucket
        S3Key: 'sagemaker-processor-deployment.zip'
      Timeout: 300
      MemorySize: 1024
      Environment:
        Variables:
          SAGEMAKER_ROLE: !GetAtt SageMakerExecutionRole.Arn
          DATA_BUCKET: !Ref ProcessedDataBucket
          MODELS_BUCKET: !Ref ModelsBucket
      SnapStart:
        ApplyOn: PublishedVersions

  # SNS Topic for alerts
  DeforestationAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ProjectName}-deforestation-alerts'
      DisplayName: 'ForestShield Deforestation Alerts'

  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      TopicArn: !Ref DeforestationAlertsTopic
      Endpoint: !Ref NotificationEmail

  # Step Functions State Machine
  DeforestationDetectionWorkflow:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub '${ProjectName}-pipeline'
      RoleArn: !GetAtt StepFunctionsExecutionRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "ForestShield Deforestation Detection Workflow",
          "StartAt": "SearchSentinelImages",
          "States": {
            "SearchSentinelImages": {
              "Type": "Task",
              "Resource": "${SearchImagesFunction.Arn}",
              "Next": "ProcessVegetation",
              "Retry": [
                {
                  "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException"],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2.0
                }
              ]
            },
            "ProcessVegetation": {
              "Type": "Task",
              "Resource": "${VegetationAnalyzerFunction.Arn}",
              "Next": "RunKMeansClustering",
              "Retry": [
                {
                  "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException"],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2.0
                }
              ]
            },
            "RunKMeansClustering": {
              "Type": "Task",
              "Resource": "${SageMakerProcessorFunction.Arn}",
              "Next": "CheckDeforestationThreshold",
              "Retry": [
                {
                  "ErrorEquals": ["Lambda.ServiceException", "Lambda.AWSLambdaException"],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 3,
                  "BackoffRate": 2.0
                }
              ]
            },
            "CheckDeforestationThreshold": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.deforestationPercentage",
                  "NumericGreaterThan": 5.0,
                  "Next": "SendDeforestationAlert"
                }
              ],
              "Default": "ProcessingComplete"
            },
            "SendDeforestationAlert": {
              "Type": "Task",
              "Resource": "arn:aws:states:::sns:publish",
              "Parameters": {
                "TopicArn": "${DeforestationAlertsTopic}",
                "Message.$": "$.alertMessage",
                "Subject": "🚨 ForestShield Alert: Deforestation Detected"
              },
              "Next": "ProcessingComplete"
            },
            "ProcessingComplete": {
              "Type": "Succeed"
            }
          }
        }

  # CloudWatch Log Groups
  VegetationAnalyzerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-vegetation-analyzer'
      RetentionInDays: 14

  SearchImagesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-search-images'
      RetentionInDays: 14

  SageMakerProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ProjectName}-sagemaker-processor'
      RetentionInDays: 14

  # DynamoDB Tables for Dashboard
  MonitoredRegionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-monitored-regions'
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      Tags:
        - Key: "Project"
          Value: !Ref ProjectName

  DeforestationAlertsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-deforestation-alerts-db'
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "regionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
        - IndexName: "regionId-index"
          KeySchema:
            - AttributeName: "regionId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      Tags:
        - Key: "Project"
          Value: !Ref ProjectName

Outputs:
  ProcessedDataBucketName:
    Description: 'S3 bucket for processed satellite data'
    Value: !Ref ProcessedDataBucket
    Export:
      Name: !Sub '${ProjectName}-processed-data-bucket'

  ModelsBucketName:
    Description: 'S3 bucket for ML models'
    Value: !Ref ModelsBucket
    Export:
      Name: !Sub '${ProjectName}-models-bucket'

  TempBucketName:
    Description: 'S3 bucket for temporary files'
    Value: !Ref TempBucket
    Export:
      Name: !Sub '${ProjectName}-temp-bucket'

  VegetationAnalyzerFunctionArn:
    Description: 'Vegetation Analyzer Lambda Function ARN'
    Value: !GetAtt VegetationAnalyzerFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-vegetation-analyzer-arn'

  SearchImagesFunctionArn:
    Description: 'Search Images Lambda Function ARN'
    Value: !GetAtt SearchImagesFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-search-images-arn'

  SageMakerProcessorFunctionArn:
    Description: 'SageMaker Processor Lambda Function ARN'
    Value: !GetAtt SageMakerProcessorFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-sagemaker-processor-arn'

  MonitoredRegionsTableName:
    Description: 'Name of the DynamoDB table for monitored regions'
    Value: !Ref MonitoredRegionsTable
    Export:
      Name: !Sub '${ProjectName}-MonitoredRegionsTableName'

  DeforestationAlertsTableName:
    Description: 'Name of the DynamoDB table for deforestation alerts'
    Value: !Ref DeforestationAlertsTable
    Export:
      Name: !Sub '${ProjectName}-DeforestationAlertsTableName'

  StepFunctionsStateMachineArn:
    Description: 'Step Functions State Machine ARN'
    Value: !Ref DeforestationDetectionWorkflow
    Export:
      Name: !Sub '${ProjectName}-stepfunctions-arn'

  SNSTopicArn:
    Description: 'SNS Topic ARN for deforestation alerts'
    Value: !Ref DeforestationAlertsTopic
    Export:
      Name: !Sub '${ProjectName}-sns-topic-arn'

  SageMakerRoleArn:
    Description: 'SageMaker Execution Role ARN'
    Value: !GetAtt SageMakerExecutionRole.Arn
    Export:
      Name: !Sub '${ProjectName}-sagemaker-role-arn' 